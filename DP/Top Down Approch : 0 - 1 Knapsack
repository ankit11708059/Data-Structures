#include<bits/stdc++.h>

using namespace std;
int p[10000], id[10000], w[10000];
int dp[1001][1001];

int f(int i, int n, int W) {
    if(i >= n) return 0;
    if(W <= 0) return 0;


    if(dp[i][W] != -1) return dp[i][W];

    int inc = 0;
    if(W - w[i] >= 0) inc = f(i+1, n, W-w[i]) + p[i];

    int exc = f(i+1, n, W);

    return dp[i][W] = max(inc, exc);
}

int main()
{
    int t;
    cin >> t;

    while(t--) {
        int n;
        cin >> n;

        int W;
        cin >> W;

        memset(dp, -1, sizeof(dp));
        memset(p, 0, sizeof(p));
        memset(w, 0, sizeof(w));


        for(int i = 0; i < n; ++i) cin >> p[i];
        for(int i = 0; i < n; ++i) cin >> w[i];

        cout << f(0, n, W) << endl;
    }
    return 0;
}
