#include<bits/stdc++.h>
using namespace std;



template<typename T>
class TreeNode
{
public:
    int data;
    vector<TreeNode<T>*> children;
    TreeNode(T data)
    {
        this->data=data;
    }
};
TreeNode<int>* takeinputlevelwise()
{
   int node,h;
   cout<<"Enter First Node\n";
   cin>>node;
   TreeNode<int> *root=new TreeNode<int>(node);
   queue<TreeNode<int>*> q;
   q.push(root);

   while(!q.empty())
   {
       TreeNode<int> *f=q.front();
       q.pop();
       cout<<"Enter the children of "<<f->data<<endl;
       cin>>h;
       for(int i=0;i<h;i++)
       {
           cout<<"Enter "<<i<<" children\n";
           cin>>node;
           TreeNode<int> *root=new TreeNode<int>(node);
           q.push(root);
           f->children.push_back(root);
       }
   }
   return root;

}
void print(TreeNode<int> *root)
    {
        if(root==NULL)
            return;
        cout<<root->data<<" ";
        for(int i=0;i<root->children.size();i++)
        {
            cout<<root->children[i]->data<<" ";
        }
        cout<<endl;
        for(int i=0;i<root->children.size();i++)
        {
            print(root->children[i]);
        }
    }
int main()
{
    TreeNode<int>* root = takeinputlevelwise();
    print(root);
}
